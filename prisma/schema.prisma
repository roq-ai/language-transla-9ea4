generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model business {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?   @db.VarChar(255)
  image       String?   @db.VarChar(255)
  name        String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  user_id     String    @db.Uuid
  tenant_id   String    @db.VarChar(255)
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  project     project[]
}

model document {
  id                                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                              String   @db.VarChar(255)
  content                           String
  language                          String   @db.VarChar(50)
  project_id                        String?  @db.Uuid
  translator_id                     String?  @db.Uuid
  reviewer_id                       String?  @db.Uuid
  created_at                        DateTime @default(now()) @db.Timestamp(6)
  updated_at                        DateTime @default(now()) @db.Timestamp(6)
  project                           project? @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_document_reviewer_idTouser   user?    @relation("document_reviewer_idTouser", fields: [reviewer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_document_translator_idTouser user?    @relation("document_translator_idTouser", fields: [translator_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model project {
  id                 String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name               String     @db.VarChar(255)
  status             String     @db.VarChar(50)
  business_id        String?    @db.Uuid
  project_manager_id String?    @db.Uuid
  created_at         DateTime   @default(now()) @db.Timestamp(6)
  updated_at         DateTime   @default(now()) @db.Timestamp(6)
  document           document[]
  business           business?  @relation(fields: [business_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user               user?      @relation(fields: [project_manager_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                                    String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                                 String     @unique @db.VarChar(255)
  firstName                             String?    @db.VarChar(255)
  lastName                              String?    @db.VarChar(255)
  roq_user_id                           String     @db.VarChar(255)
  tenant_id                             String     @db.VarChar(255)
  created_at                            DateTime   @default(now()) @db.Timestamp(6)
  updated_at                            DateTime   @default(now()) @db.Timestamp(6)
  business                              business[]
  document_document_reviewer_idTouser   document[] @relation("document_reviewer_idTouser")
  document_document_translator_idTouser document[] @relation("document_translator_idTouser")
  project                               project[]
}
